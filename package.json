{
  "name": "sfdx-hardis",
  "description": "Swiss-army-knife Toolbox for Salesforce.\n Allows you to define a complete CD/CD Pipeline.\n Orchestrate base commands and assist users with interactive wizards",
  "author": "NicolasVuillamy @nvuillam",
  "bugs": "https://github.com/hardisgroupcom/sfdx-hardis/issues",
  "version": "5.9.0",
  "dependencies": {
    "@actions/github": "^6.0.0",
    "@gitbeaker/node": "^35.8.1",
    "@oclif/core": "^4.0.28",
    "@salesforce/core": "^8.8.0",
    "@salesforce/sf-plugins-core": "^11.3.12",
    "@slack/types": "^2.14.0",
    "@slack/web-api": "^7.7.0",
    "@supercharge/promise-pool": "^3.2.0",
    "@xmldom/xmldom": "^0.8.10",
    "axios": "^1.7.8",
    "azure-devops-node-api": "^14.1.0",
    "bitbucket": "^2.12.0",
    "chalk": "^5.3.0",
    "chrome-launcher": "^1.1.2",
    "columnify": "^1.6.0",
    "cosmiconfig": "^9.0.0",
    "cross-spawn": "^7.0.6",
    "csv-stringify": "^6.5.2",
    "debug": "^4.3.6",
    "email-validator": "^2.0.4",
    "exceljs": "^4.4.0",
    "extract-zip": "^2.0.1",
    "fs-extra": "^11.2.0",
    "fs-readdir-recursive": "^1.1.0",
    "glob": "^11.0.0",
    "he": "^1.2.0",
    "inquirer": "^10.2.2",
    "isomorphic-dompurify": "^2.18.0",
    "jira-client": "^8.2.2",
    "js-yaml": "^4.1.0",
    "make-fetch-happen": "^14.0.3",
    "markdown-toc": "^1.2.0",
    "marked": "^14.1.3",
    "mega-linter-runner": "^8.3.0",
    "moment": "^2.30.1",
    "open": "^10.1.0",
    "openai": "^4.73.0",
    "ora": "^8.1.1",
    "papaparse": "^5.4.1",
    "pascalcase": "^2.0.0",
    "psl": "^1.9.0",
    "puppeteer-core": "^23.9.0",
    "read-package-up": "^11.0.0",
    "semver": "^7.6.3",
    "set-value": "^4.1.0",
    "simple-git": "^3.27.0",
    "sort-array": "^4.1.5",
    "split": "^1.0.1",
    "string-template": "^1.0.0",
    "update-notifier": "^7.3.1",
    "which": "^4.0.0",
    "ws": "^8.18.0",
    "xml2js": "^0.6.2",
    "xpath": "^0.0.34"
  },
  "devDependencies": {
    "@oclif/plugin-command-snapshot": "^5.2.21",
    "@salesforce/cli-plugins-testkit": "^5.3.38",
    "@salesforce/dev-config": "^4.3.1",
    "@salesforce/dev-scripts": "^10",
    "@types/columnify": "^1.5.4",
    "@types/cosmiconfig": "^6.0.3",
    "@types/cross-spawn": "^6.0.6",
    "@types/extract-zip": "^2.0.1",
    "@types/fs-extra": "^11.0.4",
    "@types/fs-readdir-recursive": "^1.1.3",
    "@types/glob": "^8.1.0",
    "@types/inquirer": "^9.0.7",
    "@types/jira-client": "^7.1.9",
    "@types/js-yaml": "^4.0.9",
    "@types/make-fetch-happen": "^10.0.4",
    "@types/papaparse": "^5.3.15",
    "@types/psl": "^1.1.3",
    "@types/set-value": "^4.0.3",
    "@types/sort-array": "^4.1.2",
    "@types/update-notifier": "^6.0.8",
    "@types/which": "^3.0.4",
    "@types/ws": "^8.5.13",
    "@types/xml2js": "^0.4.14",
    "eslint-plugin-sf-plugin": "^1.20.9",
    "oclif": "^4.16.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "files": [
    "/lib",
    "/messages",
    "/defaults",
    "/oclif.manifest.json",
    "/oclif.lock"
  ],
  "homepage": "https://sfdx-hardis.cloudity.com",
  "keywords": [
    "force",
    "salesforce",
    "salesforcedx",
    "sf",
    "sf-plugin",
    "sfdx",
    "devops",
    "automation",
    "cicd",
    "sfdx-plugin",
    "cloudity",
    "hardis",
    "deployment",
    "apex",
    "code-quality",
    "gitlab",
    "github",
    "azure",
    "pipeline",
    "trailblazer",
    "metadata",
    "monitoring",
    "ai",
    "openai",
    "grafana"
  ],
  "license": "AGPL-3.0",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "sf",
    "topicSeparator": " ",
    "devPlugins": [
      "@oclif/plugin-help"
    ],
    "topics": {
      "hello": {
        "description": "Commands to say hello."
      },
      "hardis": {
        "description": "Hardis tools by Cloudity"
      }
    },
    "flexibleTaxonomy": true,
    "hooks": {
      "init": [
        "./lib/hooks/init/log",
        "./lib/hooks/init/check-upgrade",
        "./lib/hooks/init/check-local-sfdx-hardis-files",
        "./lib/hooks/init/start-ws-client"
      ],
      "prerun": [
        "./lib/hooks/prerun/auth",
        "./lib/hooks/prerun/check-dependencies"
      ],
      "auth": [
        "./lib/hooks/auth/auth"
      ],
      "postrun": [
        "./lib/hooks/postrun/notify",
        "./lib/hooks/postrun/store-cache"
      ]
    }
  },
  "repository": "https://github.com/hardisgroupcom/sfdx-hardis",
  "scripts": {
    "build": "wireit",
    "build:doc": "sf hardis:doc:plugin:generate",
    "clean": "sf-clean",
    "clean-all": "sf-clean all",
    "compile": "wireit",
    "docs": "sf-docs",
    "format": "wireit",
    "link-check": "wireit",
    "lint": "wireit",
    "postinstall": "yarn husky install || echo \"Unable to install Husky. If you are in a CI/CD job, that's ok !\"",
    "postpack": "sf-clean --ignore-signing-artifacts",
    "prepack": "sf-prepack",
    "test": "wireit",
    "test:nuts": "nyc mocha \"**/*.nut.ts\" --slow 4500 --timeout 600000 --parallel",
    "test:only": "wireit",
    "version": "oclif readme"
  },
  "publishConfig": {
    "access": "public"
  },
  "wireit": {
    "build": {
      "command": "node build.cjs && generate-schema-doc config/sfdx-hardis.jsonschema.json docs/schema/sfdx-hardis-json-schema-parameters.html --config minify=false --config link_to_reused_ref=false || echo 'Please run \"pip install json-schema-for-humans\" (you need python installed on your computer)'",
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc -p . --pretty --incremental",
      "files": [
        "src/**/*.ts",
        "**/tsconfig.json",
        "messages/**"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\"",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "schemas/**/*.json",
        "command-snapshot.json",
        ".prettier*"
      ],
      "output": []
    },
    "lint": {
      "command": "eslint src test --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "messages/**",
        "**/.eslint*",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test:compile": {
      "command": "tsc -p \"./test\" --pretty",
      "files": [
        "test/**/*.ts",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test": {
      "dependencies": [
        "test:compile",
        "test:only",
        "lint"
      ]
    },
    "test:only": {
      "command": "nyc mocha \"test/**/*.test.ts\"",
      "env": {
        "FORCE_COLOR": "2"
      },
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "**/tsconfig.json",
        ".mocha*",
        "!*.nut.ts",
        ".nycrc"
      ],
      "output": []
    },
    "test:command-reference": {
      "command": "node --loader ts-node/esm --no-warnings=ExperimentalWarning \"./bin/dev.js\" commandreference:generate --erroronwarnings",
      "files": [
        "src/**/*.ts",
        "messages/**",
        "package.json"
      ],
      "output": [
        "tmp/root"
      ]
    },
    "test:deprecation-policy": {
      "command": "node --loader ts-node/esm --no-warnings=ExperimentalWarning \"./bin/dev.js\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:json-schema": {
      "command": "node --loader ts-node/esm --no-warnings=ExperimentalWarning \"./bin/dev.js\" schema:compare",
      "files": [
        "src/**/*.ts",
        "schemas"
      ],
      "output": []
    },
    "link-check": {
      "command": "node -e \"process.exit(process.env.CI ? 0 : 1)\" || linkinator \"**/*.md\" --skip \"CHANGELOG.md|node_modules|test/|confluence.internal.salesforce.com|my.salesforce.com|%s\" --markdown --retry --directory-listing --verbosity error",
      "files": [
        "./*.md",
        "./!(CHANGELOG).md",
        "messages/**/*.md"
      ],
      "output": []
    }
  },
  "exports": "./lib/index.js",
  "type": "module"
}
