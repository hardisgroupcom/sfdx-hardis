---
name: "Retrieve Dashboards"
on:
  # Run when there is an update in main
  push:
    branches:
      # - main # uncomment when working
      - improve/dashboards-retrieve
  # # Automatically run every day at 21:49 UTC, before a start of hour peak
  # schedule:
  #   - cron: "49 21 * * *"
  # # Allow to manually trigger a run of the workflow
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

###############
# Set the Job #
###############
jobs:
  retrieve_dashboards:
    # Name the Job
    name: Retrieve Dashboards
    # Set the agent to run on
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push, comment issues & post new PR
      # Remove the ones you do not need
      contents: write
      pull-requests: write
    environment:
      name: stats
    # Prevent duplicate run from happening when a forked push is committed
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository) && github.repository == 'hardisgroupcom/sfdx-hardis'
    # Set max build time for the job
    timeout-minutes: 20
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12.0
      - run: pip install grafana-dashboard-manager
      - run: cd docs/grafana/dashboards && grafana-dashboard-manager download --scheme https --host ${{ secrets.GRAFANA_HOST }} --destination . --token ${{ secrets.GRAFANA_TOKEN}}

      # Create pull request if there are updates
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN  }}
          author: "Nicolas Vuillamy <nicolas.vuillamy@gmail.com>"
          commit-message: "[automation] Auto-update dashboards"
          delete-branch: true
          title: "[automation] Auto-update dashboards"
          body: "[automation] Auto-update dashboards"
          labels: dependencies
      - name: Create PR output
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
