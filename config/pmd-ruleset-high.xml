<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Default ruleset used by the CodeClimate Engine for Salesforce.com Apex" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
    <description>RuleSet for Mega-Linter high requirement</description>
    <!-- IGNORE FILES -->
    <exclude-pattern>.*/apex-domainbuilder/*.*</exclude-pattern>
    <exclude-pattern>.*/app-setup/*.*</exclude-pattern>
    <exclude-pattern>.*/fflib_*.*</exclude-pattern>
    <exclude-pattern>.*/json2apex/*.*</exclude-pattern>
    <exclude-pattern>.*/.history/.*</exclude-pattern>

    <!-- Best Practices -->
    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"
          message="Apex assertions should include a message">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
          message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"
          message="Apex test methods should have @isTest annotation">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue"
          message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier">
        <priority>2</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid logic in triggers">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel"
          message="Debug statements should include a LoggingLevel">
        <priority>2</priority>
    </rule>
    <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable"
          message="Detects when a local variable is declared and/or assigned but not used.">
        <priority>1</priority>
    </rule>

    <!-- Code Style -->
    <rule ref="category/apex/codestyle.xml/ClassNamingConventions"
          message="Class names should begin with an uppercase character">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces"
          message="Avoid using 'for' statements without curly braces">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces"
          message="Avoid using 'if...else' statements without curly braces">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces"
          message="Avoid using if statements without curly braces">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions"
          message="Variable declarations should use camelCase">
        <priority>3</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/MethodNamingConventions"
          message="Method name does not begin with a lower case character">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/PropertyNamingConventions"
          message="Property declarations should use camelCase">
        <priority>3</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces"
          message="Avoid using 'while' statements without curly braces">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart" message="Field Declarations Should Be At Start">
        <priority>3</priority>
    </rule>

    <!-- Design -->
    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts"
          message="Deeply nested if..else statements are hard to read">
        <priority>1</priority>
        <properties>
            <property name="problemDepth" value="4"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/CyclomaticComplexity">
        <priority>2</priority>
        <properties>
            <property name="classReportLevel" value="80"/>
            <property name="methodReportLevel" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="500"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
        <priority>1</priority>
        <properties>
            <property name="minimum" value="5"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessivePublicCount"
          message="This class has too many public methods and attributes">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="60"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="700"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields">
        <priority>2</priority>
        <properties>
            <property name="maxfields" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/UnusedMethod" message="Unused Method">
        <priority>1</priority>
    </rule>

    <!-- Documentation -->
    <rule ref="category/apex/documentation.xml/ApexDoc"
          message="ApexDoc comments should be present and valid for classes, methods, and properties that are public or global">
        <priority>3</priority>
    </rule>

    <!-- Error Prone -->
    <rule ref="category/apex/errorprone.xml/ApexCSRF"
          message="Avoid making DML operations in Apex class constructor/init method">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap"
          message="Avoid directly accessing Trigger.old and Trigger.new">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass"
          message="Classes should not have non-constructor methods with the same name as the class">
        <priority>2</priority>
    </rule>

    <!-- Performance -->
    <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Avoid DML Statements inside loops">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult" message="Eagerly Loaded Describe SObjectResult">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/performance.xml/AvoidDebugStatements" message="Avoid Debug Statements">
        <priority>1</priority>
    </rule>

    <!-- Security -->
    <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint"
          message="Apex callouts should use encrypted communication channels">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexOpenRedirect"
          message="Apex classes should safely redirect to a known location">
        <priority>2</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexSharingViolations"
          message="Apex classes should declare a sharing model if DML or SOQL is used">
        <priority>2</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexSOQLInjection"
          message="Apex classes should escape variables merged in DML query">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred"
          message="Consider using named credentials for authenticated callouts">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexXSSFromURLParam"
          message="Apex classes should escape Strings obtained from URL parameters">
        <priority>1</priority>
    </rule>
    <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
        <priority>1</priority>
    </rule>
</ruleset>
