{
  "$id": "http://github.com/hardisgroupcom/sfdx-hardis.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "additionalProperties": false,
  "description": "Configuration file definition for sfdx-hardis Salesforce DX plugin",
  "properties": {
    "autoCleanTypes": {
      "$id": "#/properties/autoCleanTypes",
      "description": "When saving a sfdx-hardis task, the list of cleanings will be automatically applied to sfdx sources",
      "examples": [["dashboards", "datadotcom", "destructivechanges"]],
      "items": {
        "type": "string",
        "enum": [
          "caseentitlement",
          "dashboards",
          "datadotcom",
          "destructivechanges",
          "localfields",
          "listViewsMine",
          "minimizeProfiles",
          "productrequest"
        ]
      },
      "title": "Auto-Cleaning types",
      "type": "array"
    },
    "autoRemoveUserPermissions": {
      "$id": "#/properties/autoRemoveUserPermissions",
      "description": "When saving a sfdx-hardis task, these permissions will be removed from profiles",
      "examples": [["EnableCommunityAppLauncher", "FieldServiceAccess", "OmnichannelInventorySync"]],
      "items": {
        "type": "string"
      },
      "title": "Auto-Remove User Permissions on profiles",
      "type": "array"
    },
    "autoRetrieveWhenPull": {
      "$id": "#/properties/autoRetrieveWhenPull",
      "description": "When calling hardis:scratch:pull, if you define metadatas (named or not), they will also be retrieved using force:source:retrieve",
      "examples": [["CustomApplication"], ["CustomApplication:MyApp1", "CustomApplication:MyApp2"]],
      "items": {
        "type": "string"
      },
      "title": "Auto-Retrieve when pull",
      "type": "array"
    },
    "apexTestsMinCoverageOrgWide": {
      "$id": "#/properties/apexTestsMinCoverageOrgWide",
      "default": 75.0,
      "description": "Minimum percentage of apex code coverage accepted",
      "examples": [80.0, 95.0],
      "title": "Minimum apex test coverage %",
      "type": "number"
    },
    "availableTargetBranches": {
      "$id": "#/properties/availableTargetBranches",
      "description": "List of git branches that can be used as target for merge requests",
      "examples": [["develop", "develop_next"]],
      "items": {
        "type": "string"
      },
      "title": "Available target branches",
      "type": "array"
    },
    "cleanXmlPatterns": {
      "$id": "#/properties/cleanXmlPatterns",
      "examples": [
        [
          {
            "globPattern": "/**/*.flexipage-meta.xml",
            "xpaths": ["//ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]"]
          },
          {
            "globPattern": "/**/*.layout-meta.xml",
            "xpaths": ["//ns:relatedLists//ns:relatedList[contains(text(),'RelatedSolutionList')]"]
          }
        ]
      ],
      "description": "List of patterns to automatically clean XML files",
      "items": {
        "$id": "#/properties/cleanXmlPatterns/items",
        "type": "object",
        "additionalProperties": false,
        "description": "Clean XML pattern and xpaths",
        "properties": {
          "globPattern": {
            "$id": "#/properties/cleanXmlPatterns/items/properties/globPattern",
            "description": "Glob pattern to identify XML files to clean",
            "examples": ["/**/*.flexipage-meta.xml"],
            "title": "Glob pattern",
            "type": "string"
          },
          "xpaths": {
            "$id": "#/properties/cleanXmlPatterns/items/properties/xpaths",
            "description": "XPaths to identify elements to remove",
            "examples": [["//ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]"]],
            "title": "XPath list",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["globPattern", "xpaths"]
      },
      "title": "Clean XML Patterns",
      "type": "array"
    },
    "customCommands": {
      "$id": "#/properties/customCommands",
      "description": "List of custom commands for VsCode SFDX-Hardis extension",
      "examples": [
        [
          {
            "id": "custom-menu",
            "label": "Custom commands",
            "commands": [
              {
                "id": "generate-manifest-xml",
                "label": "Generate manifest",
                "icon": "file.svg",
                "tooltip": "Generates a manifest package.xml using local sfdx source files",
                "command": "sfdx force:source:manifest:create --sourcepath force-app --manifestname myNewManifest"
              },
              {
                "id": "list-all-orgs",
                "label": "List all orgs",
                "icon": "salesforce.svg",
                "tooltip": "List all orgs that has already been authenticated using sfdx",
                "command": "sfdx force:org:list --all"
              }
            ]
          },
          {
            "id": "custom-menu-2",
            "label": "Another custom menu",
            "commands": [
              {
                "id": "echo",
                "label": "Echo something",
                "icon": "user.svg",
                "tooltip": "Useless commands just to show that we can use not sfdx commands too",
                "command": "echo \"Something\""
              }
            ]
          }
        ]
      ],
      "items": {
        "$id": "#/properties/customCommands/items",
        "type": "object",
        "additionalProperties": false,
        "description": "Custom command definition",
        "properties": {
          "id": {
            "$id": "#/properties/customCommands/items/properties/id",
            "description": "Identifier of the menu (can be any string)",
            "title": "Id",
            "type": "string"
          },
          "label": {
            "$id": "#/properties/customCommands/items/properties/label",
            "description": "Label of the menu",
            "title": "Label",
            "type": "string"
          },
          "commands": {
            "$id": "#/properties/customCommands/items/properties/commands",
            "description": "List of commands of the menu",
            "items": {
              "$id": "#/properties/customCommands/items/properties/commands/items/properties",
              "type": "object",
              "additionalProperties": false,
              "description": "Custom command definition",
              "properties": {
                "id": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/id",
                  "description": "Identifier of the command (can be any string)",
                  "title": "Id",
                  "type": "string"
                },
                "label": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/label",
                  "description": "Label of the command that will appear in menu",
                  "title": "Label",
                  "type": "string"
                },
                "icon": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/icon",
                  "description": "Icon (can be any of svg icons of this list: https://github.com/hardisgroupcom/vscode-sfdx-hardis/tree/master/resources",
                  "title": "Icon",
                  "type": "string"
                },
                "tooltip": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/tooltip",
                  "description": "Text that will appear when user will hover the command",
                  "title": "Tooltip",
                  "type": "string"
                },
                "command": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/command",
                  "description": "Command line to run when clicking on the menu",
                  "title": "Command",
                  "type": "string"
                },
                "helpUrl": {
                  "$id": "#/properties/customCommands/items/properties/commands/items/properties/helpUrl",
                  "description": "URL for help page of the command",
                  "title": "Help url",
                  "type": "string"
                }
              },
              "required": ["id", "label", "command"]
            },
            "title": "Label",
            "type": "array"
          }
        },
        "required": ["id", "label"]
      },
      "title": "Custom commands",
      "type": "array"
    },
    "customCommandsPosition": {
      "$id": "#/properties/customCommandsPosition",
      "description": "Position of custom commands in the menu (first or last)",
      "default": "first",
      "enum": ["first", "last"],
      "examples": ["first", "last"],
      "title": "Custom commands position",
      "type": "string"
    },
    "dataPackages": {
      "$id": "#/properties/dataPackages",
      "description": "List of data packages",
      "items": {
        "$id": "#/properties/dataPackages/items",
        "type": "object",
        "additionalProperties": false,
        "description": "Data package",
        "properties": {
          "dataPath": {
            "$id": "#/properties/dataPackages/items/properties/dataPath",
            "description": "Path to SFDMU project",
            "title": "SFDMU Data project path",
            "type": "string"
          },
          "importInScratchOrgs": {
            "$id": "#/properties/dataPackages/items/properties/importInScratchOrgs",
            "description": "Path to SFDMU project",
            "title": "SFDMU Data project path",
            "type": "boolean"
          }
        },
        "required": ["dataPath", "importInScratchOrgs"]
      },
      "title": "Data packages",
      "type": "array"
    },
    "defaultPackageInstallationKey": {
      "$id": "#/properties/defaultPackageInstallationKey",
      "description": "When generating a new package version protected with password, use this value as default package installation key",
      "examples": ["hardis", "myPassword", "dFGGF43656YfdFDG{{{dhgfh:::;FSEDSFd78"],
      "title": "Defaut package installation key",
      "type": "string"
    },
    "developmentBranch": {
      "$id": "#/properties/developmentBranch",
      "default": "developpement",
      "description": "When creating a new sfdx-hardis task, this git branch is used as base to create the feature/debug sub branch. The merge request will later have this branch as target.",
      "examples": ["developpement", "dev_lot2", "hotfixes"],
      "title": "Default pull/merge request target org",
      "type": "string"
    },
    "deploymentPlan": {
      "$id": "#/properties/deploymentPlan",
      "description": "Deployment plan that will be performed during deployments. Can be based on packageXmlFile for sources or on dataPath for sfdmu data deployments",
      "examples": [
        {
          "packages": [
            {
              "label": "Import EmailTemplate records",
              "dataPath": "scripts/data/EmailTemplate",
              "order": -21
            },
            {
              "label": "Deploy EmailTemplate",
              "packageXmlFile": "manifest/splits/packageXmlEmails.xml",
              "order": -20
            },
            {
              "label": "Deploy Flow-Workflow",
              "packageXmlFile": "manifest/splits/packageXmlFlowWorkflow.xml",
              "order": 6
            }
          ]
        }
      ],
      "properties": {
        "packages": {
          "$id": "#/properties/deploymentPlan/properties/packages",
          "description": "During deployment, main package.xml will be split into these packages. Can also contain data packages",
          "examples": [
            [
              {
                "label": "Import EmailTemplate records",
                "dataPath": "scripts/data/EmailTemplate",
                "order": -21
              },
              {
                "label": "Deploy EmailTemplate",
                "packageXmlFile": "manifest/splits/packageXmlEmails.xml",
                "order": -20
              }
            ]
          ],
          "items": {
            "$id": "#/properties/install/properties/packages/items",
            "type": "object",
            "additionalProperties": false,
            "description": "Source or data package to deploy",
            "properties": {
              "dataPath": {
                "$id": "#/properties/install/properties/packages/items/dataPath",
                "examples": ["scripts/data/EmailTemplate"],
                "title": "Path to SFDMU data project to deploy",
                "type": "string"
              },
              "label": {
                "$id": "#/properties/install/properties/packages/items/label",
                "examples": ["Deploy EmailTemplate", "Import EmailTemplate records"],
                "title": "Source or data package label",
                "type": "string"
              },
              "order": {
                "$id": "#/properties/install/properties/packages/items/order",
                "examples": [-20, 13, 50],
                "title": "Execution order in deployment plan",
                "type": "number"
              },
              "packageXmlFile": {
                "$id": "#/properties/install/properties/packages/items/packageXmlFile",
                "examples": ["manifest/splits/packageXmlEmails.xml"],
                "title": "Path to package.xml file to use for deployment",
                "type": "string"
              },
              "waitAfter": {
                "$id": "#/properties/install/properties/packages/items/waitAfter",
                "description": "Delay to wait before installing the next package",
                "examples": [10, 20],
                "title": "Wait after install (seconds)",
                "type": "number"
              }
            }
          },
          "required": ["label", "order"],
          "title": "List of packages to deploy",
          "type": "array"
        }
      },
      "title": "Deployment plan",
      "type": "object"
    },
    "devHubAlias": {
      "$id": "#/properties/devHubAlias",
      "default": "",
      "description": "Dev Hub alias, usually DevHub_ProjectName",
      "examples": ["DevHub_MyClientMyProject", "DevHub_GoogleGmail", "DevHub_AppleIWatch"],
      "title": "Dev Hub org alias",
      "type": "string"
    },
    "devHubUsername": {
      "$id": "#/properties/devHubUsername",
      "default": "",
      "description": "Dev Hub username, used to authenticate to DevHub from CI jobs",
      "examples": ["cicd-user@myclient.com", "scratch-user@google.fr", "scratch-user@apple.fr"],
      "title": "Dev Hub Username",
      "type": "string"
    },
    "extends": {
      "$id": "#/properties/extends",
      "description": "You can base your local sfdx-hardis configuration on a remote config file. That allows you to have the same config base for all your projects",
      "examples": ["https://raw.githubusercontent.com/worldcompany/shared-config/main/.sfdx-hardis.yml"],
      "title": "Extends remote configuration URL",
      "type": "string"
    },
    "initPermissionSets": {
      "$id": "#/properties/initPermissionSets",
      "description": "When creating a scratch org, Admin user will be automatically assigned to those permission sets",
      "examples": [["MyPermissionSet", "MyPermissionSetGroup"]],
      "items": {
        "$id": "#/properties/initPermissionSets/items",
        "type": ["object", "string"],
        "additionalProperties": false,
        "description": "Permission Set or Permission Set Group",
        "properties": {
          "name": {
            "$Id": "#/properties/initPermissionSets/items/properties/name",
            "description": "Permission Set or Permission Set Group name",
            "examples": [["MyPermissionSet", "MyPermissionSetGroup", "MyPermissionSetGroup2"]],
            "title": "Name",
            "type": "string"
          }
        }
      },
      "title": "Initial Permission Sets",
      "type": "array"
    },
    "installedPackages": {
      "$id": "#/properties/installedPackages",
      "description": "Defines the list of packages installed on the project. Use ",
      "examples": [
        [
          {
            "Id": "0A30N000000ALWrSAO",
            "SubscriberPackageId": "033b0000000Pf2AAAS",
            "SubscriberPackageName": "Declarative Lookup Rollup Summaries Tool",
            "SubscriberPackageNamespace": "dlrs",
            "SubscriberPackageVersionId": "04t0N000000IyYrQAK",
            "SubscriberPackageVersionName": "2.11",
            "SubscriberPackageVersionNumber": "2.11.0.1",
            "installOnScratchOrgs": false,
            "installDuringDeployments": true,
            "installationkey": "MyInstallationKey"
          },
          {
            "Id": "0A35r000000GveVCAS",
            "SubscriberPackageId": "0330o000000B3vIAAS",
            "SubscriberPackageName": "Files Attachment Notes",
            "SubscriberPackageNamespace": "fan_astrea",
            "SubscriberPackageVersionId": "04t0o000003nRWAAA2",
            "SubscriberPackageVersionName": "Summer2021",
            "SubscriberPackageVersionNumber": "1.22.0.2",
            "installOnScratchOrgs": true,
            "installDuringDeployments": true
          }
        ]
      ],
      "items": {
        "$id": "#/properties/installedPackages/items",
        "type": "object",
        "additionalProperties": false,
        "description": "Salesforce package info (managed, unlocked or unmanaged)",
        "properties": {
          "Id": {
            "$Id": "#/properties/install/properties/packages/items/Id",
            "examples": ["0A35r000000GveVCAS"],
            "title": "(unused) PackageId",
            "type": "string"
          },
          "SubscriberPackageId": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageId",
            "examples": ["033b0000000Pf2AAAS"],
            "title": "Subscriber Package Id",
            "type": "string"
          },
          "SubscriberPackageName": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageName",
            "examples": ["Files Attachment Notes"],
            "title": "Subscriber Package Name",
            "type": "string"
          },
          "SubscriberPackageNamespace": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageNamespace",
            "examples": ["fan_astrea"],
            "title": "Subscriber Package NameSpace",
            "type": ["string", "null"]
          },
          "SubscriberPackageVersionId": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageVersionId",
            "examples": ["04t0o000003nRWAAA2"],
            "title": "Subscriber Version Id (IMPORTANT)",
            "type": "string"
          },
          "SubscriberPackageVersionName": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageVersionName",
            "examples": ["Summer2021"],
            "title": "Subscriber Version Name",
            "type": "string"
          },
          "SubscriberPackageVersionNumber": {
            "$Id": "#/properties/install/properties/packages/items/SubscriberPackageVersionNumber",
            "examples": ["1.22.0.2"],
            "title": "Subscriber Version Number",
            "type": "string"
          },
          "installDuringDeployments": {
            "$Id": "#/properties/install/properties/packages/items/installDuringDeployments",
            "default": false,
            "description": "If true, during deployments this package will be installed in target org if not installed yet",
            "examples": [true, false],
            "title": "Install during deployments",
            "type": "boolean"
          },
          "installOnScratchOrgs": {
            "$Id": "#/properties/install/properties/packages/items/installOnScratchOrgs",
            "default": false,
            "description": "If true, this package will be installed when creating a new scratch org with sfdx-hardis",
            "examples": [true, false],
            "title": "Install on scratch orgs",
            "type": "boolean"
          },
          "installationkey": {
            "$Id": "#/properties/install/properties/packages/items/installationkey",
            "examples": ["MyInstallationKey", "4FzkMzUSwFfP#@"],
            "description": "Installation key for key-protected package",
            "title": "Package installation key",
            "type": "string"
          }
        },
        "required": ["SubscriberPackageVersionId"],
        "title": "Salesforce package"
      },
      "title": "Installed Packages",
      "type": "array"
    },
    "installPackagesDuringCheckDeploy": {
      "$id": "#/properties/installPackagesDuringCheckDeploy",
      "default": false,
      "description": "When calling deployment check command, installs any package referred within installedPackages property",
      "examples": [true],
      "title": "Install packages during deployment checks",
      "type": "boolean"
    },
    "instanceUrl": {
      "$id": "#/properties/instanceUrl",
      "default": "",
      "description": "Salesforce instance URL used by CI for deployment or backups",
      "examples": ["https://myclient.force.com", "https://google.force.com", "https://apple.force.com"],
      "title": "Instance URL",
      "type": "string"
    },
    "listViewsToSetToMine": {
      "$id": "#/properties/listViewsToSetToMine",
      "default": [],
      "description": "List of ListView items to set to Mine after a delivery (that does not accept value 'Everything')",
      "examples": [],
      "items": {
        "type": "string"
      },
      "title": "List views to set to Mine",
      "type": "array"
    },
    "sourcesToRetrofit": {
      "$id": "#/properties/sourcesToRetrofit",
      "description": "List of metadata to retrieve for retrofit job",
      "examples": [["CustomField", "Layout", "PermissionSet"]],
      "items": {
        "type": "string"
      },
      "title": "Metadata to retrofit",
      "type": "array"
    },
    "msTeamsWebhookUrl": {
      "$id": "#/properties/msTeamsWebhookUrl",
      "default": "",
      "description": "Url of the Ms Teams channel Web Hook that can be used to send ALL notifications",
      "examples": ["https://my.msteams.webhook.url"],
      "title": "MsTeams WebHook Url (ALL)",
      "type": "string"
    },
    "msTeamsWebhookUrlCritical": {
      "$id": "#/properties/msTeamsWebhookUrlCritical",
      "default": "",
      "description": "Url of the Ms Teams channel Web Hook that can be used to send CRITICAL notifications",
      "examples": ["https://my.msteams.webhook.url"],
      "title": "MsTeams WebHook Url (CRITICAL)",
      "type": "string"
    },
    "msTeamsWebhookUrlSevere": {
      "$id": "#/properties/msTeamsWebhookUrlSevere",
      "default": "",
      "description": "Url of the Ms Teams channel Web Hook that can be used to send SEVERE notifications",
      "examples": ["https://my.msteams.webhook.url"],
      "title": "MsTeams WebHook Url (SEVERE)",
      "type": "string"
    },
    "msTeamsWebhookUrlWarning": {
      "$id": "#/properties/msTeamsWebhookUrlWarning",
      "default": "",
      "description": "Url of the Ms Teams channel Web Hook that can be used to send WARNING notifications",
      "examples": ["https://my.msteams.webhook.url"],
      "title": "MsTeams WebHook Url (WARNING)",
      "type": "string"
    },
    "msTeamsWebhookUrlInfo": {
      "$id": "#/properties/msTeamsWebhookUrlWarning",
      "default": "",
      "description": "Url of the Ms Teams channel Web Hook that can be used to send INFO notifications",
      "examples": ["https://my.msteams.webhook.url"],
      "title": "MsTeams WebHook Url (INFO)",
      "type": "string"
    },
    "customPlugins": {
      "$id": "#/properties/customPlugins",
      "description": "List of additional plugins that will be displayed in VsCode SFDX-Hardis Dependencies panel",
      "examples": [
        [
          {
            "name": "mo-dx-plugin",
            "helpUrl": "https://github.com/msrivastav13/mo-dx-plugin"
          },
          {
            "name": "shane-sfdx-plugins",
            "helpUrl": "https://github.com/mshanemc/shane-sfdx-plugins"
          }
        ]
      ],
      "items": {
        "$id": "#/properties/customPlugins/items",
        "type": "object",
        "additionalProperties": false,
        "description": "Plugin definition",
        "properties": {
          "name": {
            "$Id": "#/properties/customPlugins/items/properties/name",
            "description": "Name of the plugin npm package",
            "examples": ["mo-dx-plugin", "shane-sfdx-plugins"],
            "title": "Name",
            "type": "string"
          },
          "helpUrl": {
            "$Id": "#/properties/customPlugins/items/properties/helpUrl",
            "description": "Url of plugin documentation",
            "examples": ["https://github.com/msrivastav13/mo-dx-plugin", "https://github.com/mshanemc/shane-sfdx-plugins"],
            "title": "Name",
            "type": "string"
          }
        },
        "title": "Plugin"
      },
      "title": "Custom plugins",
      "type": "array"
    },
    "poolConfig": {
      "$id": "#/properties/poolConfig",
      "description": "Configuration allowing to generate and fetch scratch orgs from scratch org pool",
      "examples": [
        {
          "maxScratchOrgsNumber": 10,
          "storageService": "kvdb.io"
        }
      ],
      "title": "Scratch org pool configuration",
      "type": "object",
      "properties": {
        "minScratchOrgRemainingDays": {
          "$id": "#/properties/poolConfig/minScratchOrgRemainingDays",
          "description": "When pool scratch org is less than this number, it is deleted and another one is created",
          "title": "Min scratch org remaining days",
          "default": 25,
          "type": "number"
        },
        "maxScratchOrgsNumber": {
          "$id": "#/properties/poolConfig/maxScratchOrgsNumber",
          "description": "Maximum number of active scratch orgs in the scratch org pool",
          "title": "Maximum number of scratch orgs",
          "type": "number"
        },
        "maxScratchOrgsNumberToCreateOnce": {
          "$id": "#/properties/poolConfig/maxScratchOrgsNumberToCreateOnce",
          "description": "Maximum number of scratch orgs to create in one CI job",
          "title": "Maximum number of scratch orgs to create once",
          "type": "number"
        },
        "storageService": {
          "$id": "#/properties/poolConfig/storageService",
          "description": "Remote service allowing to store scratch org pool details",
          "title": "Storage service for scratch org pool",
          "type": "string"
        }
      }
    },
    "productionBranch": {
      "$id": "#/properties/productionBranch",
      "default": "",
      "description": "Name of the git branch corresponding to production environment",
      "examples": ["master", "main", "production"],
      "title": "Production branch name",
      "type": "string"
    },
    "projectName": {
      "$id": "#/properties/projectName",
      "default": "",
      "description": "Identifier for the project (can be the client and project)",
      "examples": ["MyClientMyProject", "GoogleGmail", "AppleIWatch"],
      "title": "Project Name",
      "type": "string"
    },
    "retrofitBranch": {
      "$id": "#/properties/retrofitBranch",
      "default": "",
      "description": "Name of the git branch where retrofit merge requests targets to",
      "examples": ["preprod", "dev", "maintenance"],
      "title": "Retrofit branch name",
      "type": "string"
    },
    "retrofitIgnoredFiles": {
      "$id": "#/properties/retrofitIgnoredFiles",
      "description": "When calling hardis:org:retrieve:sources:retrofit, list of files to ignore (discard just after retrieve)",
      "examples": [
        [
          "force-app/main/default/applications/MyAppIWantToManageInProduction.app-meta.xml",
          "force-app/main/default/flexipages/MyFlexipageWithDashboards.flexipage-meta.xml"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Retrofit ignored files",
      "type": "array"
    },
    "scratchOrgInitApexScripts": {
      "$id": "#/properties/scratchOrgInitApexScripts",
      "description": "Apex scripts to call after scratch org initialization",
      "examples": [["scripts/apex/init-scratch.apex", "scripts/apex/init-custom-settings.apex"]],
      "items": {
        "type": "string"
      },
      "title": "Scratch org init apex scripts",
      "type": "array"
    },
    "sfdmuCanModify": {
      "$id": "#/properties/sfdmuCanModify",
      "default": "",
      "description": "Instance host name to allow SFDMU to deploy data in a production org",
      "examples": ["myproject.force.com"],
      "title": "SFDMU can modify",
      "type": "string"
    },
    "skipUpdateForceIgnore": {
      "$id": "#/properties/skipUpdateForceIgnore",
      "default": false,
      "description": "Defines if sfdx-hardis will propose to upgrade local .forceignore file",
      "title": "Skip update .forceignore file",
      "type": "boolean"
    },
    "skipUpdateGitIgnore": {
      "$id": "#/properties/skipUpdateGitIgnore",
      "default": false,
      "description": "Defines if sfdx-hardis will propose to upgrade local .gitignore file",
      "title": "Skip update .gitignore file",
      "type": "boolean"
    },
    "targetUsername": {
      "$id": "#/properties/targetUsername",
      "default": "",
      "description": "Salesforce username used by CI for deployment or backups",
      "examples": ["deployments@myclient.com", "deployments@google.fr", "deployments@apple.com"],
      "title": "Target Username",
      "type": "string"
    }
  },
  "title": "sfdx-hardis configuration",
  "type": "object"
}
